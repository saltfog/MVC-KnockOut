@{
    ViewBag.Title = "";
}

<h2>@ViewBag.Message</h2>
<div class="container-fluid">
    <div class="row">
        <div class="form-group">
            <div class="col-md-3 small" data-bind="foreach: selectFilterVM.selectFilters">
                <label style="margin-top:5px; margin-bottom:5px;" for="sel1" data-bind="text: nameLabel"></label>

                <select class="form-control" id="sel1" data-bind="attr: { multiple: multiSelect }, options: availableValues,
                value: value,
                selectedOptions: values"></select>
            </div>
            <div class="col-md-4 small">
                <ul data-bind="foreach: selectFilterVM.activeFilters">
                    <li>
                        <span style="margin-top:5px; margin-bottom:5px; font-weight:bold" data-bind="text: nameLabel"></span>

                        <span data-bind="text: valueText"></span>

                        <a href="#" data-bind="event:{ click: reset }">Clear</a>
                    </li>
                </ul>
            </div>
            <div class="col-md-5 small">
                <table class="table table-striped table-hover table-condensed">
                    <thead>
                        <tr>
                            <th>
                                Continent
                            </th>
                            <th>
                                Country
                            </th>
                            <th>
                                City
                            </th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: selectFilterVM.selectedItems">
                        <tr>
                            <td data-bind="text: Continent"></td>
                            <td data-bind="text: Country"></td>
                            <td data-bind="text: City"></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">

    // Define the filtering select controls this way.
    // Parameters to selectFilter() are:
    //   name:         name of property to filter on
    //   parentName:   name of master select control's property
    //   model:        the model object for this view
    //   multiselect:  whether to allow selection of multiple values
    function loadSelects(model) {
        new selectFilter('Continent', '', model, 'Continent', true);
        new selectFilter('Country', 'Continent', model, 'Country', false);
        new selectFilter('City', 'Country', model, 'City', true);
    }

    // We added this simple top-level model to separate the knockout
    // viewmodel from the select-filter sub-model.  It's easy to add
    // other knockout variables and bindings to this view model if
    // needed for other controls on the page.
    var viewModel = function() {
        this.selectFilterVM = new sfViewModel(this);
    };


    $(document).ready(function () {
        var model = new viewModel();
        // specify the method to load the select filters.
        model.selectFilterVM.loadSelectsFunc = loadSelects;

        // To load the item list with an ajax call, uncomment this line and comment out the one below it.
        // Load homes collection from server, then populate allItems
        $.getJSON("/Home/World", model.selectFilterVM.loadData(model.selectFilterVM));  // Change the URL as needed.

        // To load the items from a local javascript array, uncomment this line and comment out the previous one.
        //model.selectFilterVM.loadListFromArray({ AllItems: AllItems} );

    });

    </script>
}
